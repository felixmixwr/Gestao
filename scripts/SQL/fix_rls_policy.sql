-- =============================================
-- Script para corrigir pol√≠tica RLS da tabela programacao
-- =============================================
-- Este script corrige problemas com Row Level Security

-- 1. Primeiro, vamos verificar se RLS est√° habilitado
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_class 
        WHERE relname = 'programacao' AND relrowsecurity = true
    ) THEN
        ALTER TABLE programacao ENABLE ROW LEVEL SECURITY;
        RAISE NOTICE '‚úÖ RLS habilitado para tabela programacao';
    ELSE
        RAISE NOTICE '‚úÖ RLS j√° est√° habilitado para tabela programacao';
    END IF;
END $$;

-- 2. Remover pol√≠ticas existentes que podem estar causando conflito
DO $$
BEGIN
    -- Remover pol√≠tica existente se houver
    DROP POLICY IF EXISTS "Users can only access their company's programacao" ON programacao;
    RAISE NOTICE '‚úÖ Pol√≠ticas antigas removidas';
END $$;

-- 3. Criar nova pol√≠tica RLS mais robusta
DO $$
BEGIN
    -- Pol√≠tica para INSERT: usu√°rio deve ter company_id v√°lido
    CREATE POLICY "Users can insert programacao for their company" ON programacao
        FOR INSERT WITH CHECK (
            company_id IN (
                SELECT company_id FROM users 
                WHERE id = auth.uid() AND company_id IS NOT NULL
            )
        );
    
    -- Pol√≠tica para SELECT: usu√°rio pode ver apenas dados da sua empresa
    CREATE POLICY "Users can view programacao from their company" ON programacao
        FOR SELECT USING (
            company_id IN (
                SELECT company_id FROM users 
                WHERE id = auth.uid() AND company_id IS NOT NULL
            )
        );
    
    -- Pol√≠tica para UPDATE: usu√°rio pode editar apenas dados da sua empresa
    CREATE POLICY "Users can update programacao from their company" ON programacao
        FOR UPDATE USING (
            company_id IN (
                SELECT company_id FROM users 
                WHERE id = auth.uid() AND company_id IS NOT NULL
            )
        );
    
    -- Pol√≠tica para DELETE: usu√°rio pode deletar apenas dados da sua empresa
    CREATE POLICY "Users can delete programacao from their company" ON programacao
        FOR DELETE USING (
            company_id IN (
                SELECT company_id FROM users 
                WHERE id = auth.uid() AND company_id IS NOT NULL
            )
        );
    
    RAISE NOTICE '‚úÖ Novas pol√≠ticas RLS criadas com sucesso';
END $$;

-- 4. Verificar se o usu√°rio atual tem company_id
DO $$
DECLARE
    current_user_id UUID;
    user_company_id UUID;
BEGIN
    -- Obter ID do usu√°rio atual
    current_user_id := auth.uid();
    
    IF current_user_id IS NULL THEN
        RAISE NOTICE '‚ö†Ô∏è Usu√°rio n√£o autenticado';
    ELSE
        -- Verificar company_id do usu√°rio
        SELECT company_id INTO user_company_id 
        FROM users 
        WHERE id = current_user_id;
        
        IF user_company_id IS NULL THEN
            RAISE NOTICE '‚ö†Ô∏è ATEN√á√ÉO: Usu√°rio % n√£o tem company_id definido', current_user_id;
            RAISE NOTICE 'üí° Solu√ß√£o: Atualize a tabela users para definir company_id para este usu√°rio';
        ELSE
            RAISE NOTICE '‚úÖ Usu√°rio % tem company_id: %', current_user_id, user_company_id;
        END IF;
    END IF;
END $$;

-- 5. Verificar estrutura da tabela users
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'users' AND column_name = 'company_id'
    ) THEN
        RAISE NOTICE '‚úÖ Tabela users tem coluna company_id';
    ELSE
        RAISE NOTICE '‚ùå Tabela users N√ÉO tem coluna company_id';
        RAISE NOTICE 'üí° Execute: ALTER TABLE users ADD COLUMN company_id UUID REFERENCES companies(id);';
    END IF;
END $$;

-- 6. Verificar se existem empresas na tabela companies
DO $$
DECLARE
    company_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO company_count FROM companies;
    
    IF company_count > 0 THEN
        RAISE NOTICE '‚úÖ Existem % empresas na tabela companies', company_count;
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Tabela companies est√° vazia';
    END IF;
END $$;

-- 7. Mostrar pol√≠ticas ativas
DO $$
DECLARE
    policy_record RECORD;
BEGIN
    RAISE NOTICE 'üìã Pol√≠ticas RLS ativas para tabela programacao:';
    
    FOR policy_record IN 
        SELECT policyname, cmd, qual, with_check
        FROM pg_policies 
        WHERE tablename = 'programacao'
    LOOP
        RAISE NOTICE '  - %: %', policy_record.policyname, policy_record.cmd;
    END LOOP;
END $$;

RAISE NOTICE 'üéâ Script de corre√ß√£o RLS executado com sucesso!';




